^INCLUDE:jenkins/configs/includes/properties.yaml<abortIfNotLatest=abortIfNotLatest: "soft">; # aborts the PR's current build if there is a newer one running

uc1: FR5CU_DNNN1_NNN_N_XX_2_uC1
uc2: FR5CU_DENN1_CEN_N_XX_2_uC2

cmake_cfg_path: ad_radar_apl/tools/cmake/cfg

hw: C0

cantataBuildType : full
testHwU: fr5cu

user_id: cis9lr

<%
int order = 0
%>
<%
int nodeOrder = 0
%>

pipelines:
- nodes: 
  - label: ATR
    executionOrder: ${nodeOrder=0}
    stages:
    - ^INCLUDE:jenkins/configs/includes/CheckoutSCM.yaml<execOrder=${order=0}>;
    - ^INCLUDE:jenkins/configs/includes/GenerateHeader.yaml<execOrder=${++order}, user_id=^YAML:user_id;>;
    - ^INCLUDE:jenkins/configs/includes/GeneratePDM.yaml<execOrder=${++order}, build_variant=^YAML:uc2;>;
    - ^INCLUDE:jenkins/configs/includes/CantataHost.yaml<execOrder=${++order}, uc1=^YAML:uc1;, uc2=^YAML:uc2;, buildType=^YAML:cantataBuildType;>;
    - ^INCLUDE:jenkins/configs/includes/CoveragePerComp.yaml<execOrder=${++order}, uc2=^YAML:uc2;, hw=^YAML:hw;>;
  - label: ATR
    executionOrder: ${nodeOrder=0}
    stages:
    - ^INCLUDE:jenkins/configs/includes/CheckoutSCM.yaml<execOrder=${order=0}>;
    - ^INCLUDE:jenkins/configs/includes/GenerateHeader.yaml<execOrder=${++order}, user_id=^YAML:user_id;>;
    - ^INCLUDE:jenkins/configs/includes/GeneratePDM.yaml<execOrder=${++order}, build_variant=^YAML:uc2;>;
    - ^INCLUDE:jenkins/configs/includes/CheckFluxErrors.yaml<execOrder=${++order}>;
    - ^INCLUDE:jenkins/configs/includes/CheckFluxDetails.yaml<execOrder=${++order}>;
    - ^INCLUDE:jenkins/configs/includes/Doxygen.yaml<execOrder=${++order}>;
    - ^INCLUDE:jenkins/configs/includes/BuildBCT.yaml<execOrder=${++order}, uc1=^YAML:uc1;, uc2=^YAML:uc2;, cfg_path_uc1=ad_radar_apl/tools/builder/cubas_gen_^YAML:uc1;.cfg, cfg_path_uc2=ad_radar_apl/tools/builder/cubas_gen_^YAML:uc2;.cfg>;
  - label: ATR
    executionOrder: ${nodeOrder=0}
    stages:
    - ^INCLUDE:jenkins/configs/includes/CheckoutSCM.yaml<execOrder=${order=0}>;
    - ^INCLUDE:jenkins/configs/includes/GenerateHeader.yaml<execOrder=${++order}, user_id=^YAML:user_id;>;
    - ^INCLUDE:jenkins/configs/includes/GeneratePDM.yaml<execOrder=${++order}, build_variant=^YAML:uc2;>;
    - ^INCLUDE:jenkins/configs/includes/BuildSW.yaml<execOrder=${++order}, build_variant=^YAML:uc1;, cfg_path=^YAML:cmake_cfg_path;, variant=uc1, threshold=175>;
    - ^INCLUDE:jenkins/configs/includes/BuildSW.yaml<execOrder=${++order}, build_variant=^YAML:uc2;, cfg_path=^YAML:cmake_cfg_path;, variant=uc2, threshold=193>;
    - ^INCLUDE:jenkins/configs/includes/SplunkExporterCompilerWarnings.yaml<execOrder=${++order}, hw=^YAML:hw;, uc=^YAML:uc1;>; 
    - ^INCLUDE:jenkins/configs/includes/SplunkExporterCompilerWarnings.yaml<execOrder=${++order}, hw=^YAML:hw;, uc=^YAML:uc2;>; 
    - ^INCLUDE:jenkins/configs/includes/SplunkExporterCompilerWarningsTotal.yaml<execOrder=${++order}, hw=^YAML:hw;, uc1=^YAML:uc1;, uc2=^YAML:uc2;>;
    - ^INCLUDE:jenkins/configs/includes/PlantContainer_PR.yaml<execOrder=${++order}, uc1=^YAML:uc1;, uc2=^YAML:uc2;>;
    - ^INCLUDE:jenkins/configs/includes/MergedHex.yaml<execOrder=${++order}, hw=^YAML:hw;>;