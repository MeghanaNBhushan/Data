*{
* "PLATFORM" : "PLATFORM_WIN32",
* "COMPILER_HIERARCHY" : "GHS_Multi",
* "COMPILER_NAME": "TRI",
* "COMPILER_VERSION": "201815",
* "HOST": "standalone",
* "TARGET": "TC1V162",
* "SOURCE_LANGUAGE": "C",
* "COMPILER_CMD": "cctri",
* "ADDITIONAL_INCLUDES":"DATA/GHS_IFX_201815_TC1V162_C/Stub",
* "INCLUDE_LIST": [
*   {"INCLUDE_STRUCTURE": {
*       "INCLUDE_TYPE": "MasterScript",
*       "INCLUDE_VALUE": "DATA/GHS_IFX_201815_TC1V162_C/Script/GHS_IFX_201815_TC1V162_C.py"
*       }
*   },
*   {"INCLUDE_STRUCTURE": {
*       "INCLUDE_TYPE": "HelperScript",
*           "INCLUDE_VALUE": ""
*       }
*   }
* ],
* "SYNCHRONISATION" : {
*   "INCLUDE_FLAGS":"",
*   "DEFINE_FLAGS":"",
*   "SETTINGS_FILE_OPTIONS":{
*       "FLAG":"",
*       "EXTENSION":"",
*       "LITERAL_QUOTES":""
*       }
*   }
*}

-d  __Tricore_TC1V162=1
-d  __Long_Is_32=1
-d  __FUNCPTR_BIT=32
-d  __Field_Is_Unsigned__=1
-d  __LittleEndian=1
-d  _Bool_DEFINED=1
-d  __LDBL_SIZE=8
-d  __LONG_BIT=32
-d  __ghs_asm=2
-d  __ELF__=1
-d  __WChar_Is_Signed__=1
-d  __ghs=1
-d  __GHS_REVISION_VALUE=1550179989
-d  __LittleEndian__=1
-d  __LLONG_BIT=64
-d  __ghs_sda=1
-d  __GHS_VERSION_NUMBER=201815
-d  __SoftwareDouble=1
-d  __GNU_ASM_SUPPORT__=1
-d  __TIME_T_BIT=32
-d  __ghs__=1
-d  __Char_Is_Signed__=1
-d  __Ptr_Is_32=1
-d  __STDC__=1
-d  __INT_BIT=32
-d  __MAX_BIT=64
-d  __LANGUAGE_C__=1
-d  __tricore_rosda=1
-d  __ATTRIBUTES=1
-d  __GHS_FEATURE_ENABLED=3
-d  __SHRT_BIT=16
-d  __PTR_BIT=32
-d  __ghs_alignment=4
-d  __LANGUAGE_C=1
-d  __Tricore_EABI_3_0__=1
-d  __LL_BIT=64
-d  __Tricore__=1
-d  __FLT_SUBNORMAL_IS_ZERO__=1
-d  __GHS_FEATURE_DISABLED=2
-d  __GHS_NOCOMMONS=1
-d  __EDG_VERSION__=413
-d  __ghs_max_pack_value=4
-d  __STDC_VERSION__=199901L
-d  __STDC_NO_ATOMICS__=1
-d  __LL_Is_64=1
-d  __IeeeFloat__=1
-d  __ELF=1
-d  __STDC_NO_VLA__=1
-d  __SIGNED_CHARS__=1
-d  __REG_BIT=32
-d  __SoftwareDouble__=1
-d  __Tricore=1
-d  __CHAR_BIT=8
-d  __LDBL_BIT=64
-d  __Enum_Field_Is_Signed__=1
-d  __GHS_NOCOMMONS__=1
-d  __WChar_Is_Long__=1
-d  __Int_Is_32=1
-d  __Ptr_Is_Unsigned__=1
-d  __IeeeFloat=1
-d  __EDG__=1
-d  __GHS_UNICODE__=1
-d  __GHS_FEATURE_STRIPPED=1
-d "__GHS_REVISION_DATE=_PRL_STRINGIFY(Feb 14 2019)"
-d "__EDG_SIZE_TYPE__=unsigned int"
-d  __Reg_Is_32=1
-d  __PROTOTYPES__=1
-d  __ghs_zda=1
-d  __FP16_BIT=16
-d  __EDG_PTRDIFF_TYPE__=int
-d  __WCHAR_BIT=32
-d  __LITTLE_ENDIAN__=1
-d  __FREG_BIT=32
-d  __STDC_HOSTED__=1
-d  __tricore_rozda=1
-d  __Tricore_TC1V162__=1
-d  _Bool_DEFINED=1
-d  __LittleEndian=1
-d  __GHS_OPTIMIZE__=1
-d  __GHS_Inline_String_Functions=1
-d  __GHS_Inline_Memory_Functions=1
-d  __GHS_Optimize_General__=1

-s char=8
-a char=1
-s short=16
-a short=2
-s int=32
-a int=4
-s long=32
-a long=4
-s longlong=64
-a longlong=4
-s float=32
-a float=4
-s double=64
-a double=4
-s ldouble=64
-a ldouble=4
-s codeptr=32
-a codeptr=4
-s dataptr=32
-a dataptr=4
-unsignedchar-

-intrinsictype "size_t=unsigned int"
-intrinsictype "ptrdiff_t=signed int"
-intrinsictype "wchar_t=signed long"
-intrinsictype "enum=signed char,unsigned char,signed short,unsigned short,signed int"
-arithrsh+
-foldplainchar+
-slashwhite-
-intrinsictype "bool=boolean,_Bool,bool,Dem_boolean_least"
-intrinsictype "bitfield=_Bool, signed char, unsigned char, signed short, unsigned short, signed long, unsigned long, signed long long, unsigned long long"
-skippragma "ghs*"
-enabledataflow+
-tabstop 4

-ex-
-ex longlong
-ex asm
*-ex dollar 
*-ex ansipc
*-ex c++

-xnamelength 513
-namelength 513
-xcase-
-maxlinelength 0

*-alwayssearchincludedirectoriesfirst-
-bitsigned-

-ppfilename+
-pplist+
-d "__INTADDR__(A)=((unsigned int)(A))"
-d "__attribute__=_ignore_paren"
-d "__asm__=__asm"

-d "__inline=static inline"
-d "__inline__=__inline"
-d "__noinline="
-d "__interrupt="
-d "_PRL_STRINGIFY(x)=#x"
-d "__func__=_PRL_STRINGIFY(__func__)"
-d "__fp16=float"

* Inhibit in header 'inline.h' that 'inline' is again replaced with '__inline'
-CodeRegEx='s/#\s*define\s+inline\s+__inline/ /'
* Macro '__inline' defined in this cct file shall be handled like it was not defined.
* Otherwise wrong conditional preprocessing alternative will be choosen
-CodeRegEx='s/defined[(]__inline[)]/ 0 /'

* Enable QAC to detect autosar "boolean" constants as boolean constants
-d "true=1"
-d "false=0"
-d "TRUE=true"
-d "FALSE=false"

* Enable QAC to detect autosar "boolean" as a boolean type
-CodeRegEx='s/typedef\s+unsigned\s+char\s+boolean\s*;/typedef _Bool boolean;/'
-CodeRegEx='s/typedef\s+uint8\s+boolean\s*;/typedef _Bool boolean;/'

* Bugfix qac-msg 3200
* return values can be ignored for memcpy, memset, memmove
-CodeRegEx='s/void\s*[*]\s*memcpy\s*[(]/void memcpy (/'
-CodeRegEx='s/void\s*[*]\s*memset\s*[(]/void memset (/'
-CodeRegEx='s/void\s*[*]\s*memmove\s*[(]/void memmove (/'

* (void) casts of memcpy(), memset() and memmove() calls will be ignored.
-CodeRegEx='s/[(]void[)]memcpy[(]/memcpy(/'
-CodeRegEx='s/[(]void[)]memset[(]/memset(/'
-CodeRegEx='s/[(]void[)]memmove[(]/memmove(/'


* Enable Replacement code for asm-statements
-CodeRegEx='s|/\*\s*RBSRCTRANS_ASM([^\$]*)| \1 /* |'
-CodeRegEx='s|//\s*RBSRCTRANS_ASM([^\$]*)| \1 // |'


* Adapt declaration of intrinsics and warn for own declaration of intrinsics
-CodeRegEx='s/void\s*__dsync\s*[(]/void RBSRCTRANS_W_DSYNC (/'
-d "RBSRCTRANS_W_DSYNC=__dsync"
-CodeRegEx='s/void\s*__isync\s*[(]/void RBSRCTRANS_W_ISYNC (/'
-d "RBSRCTRANS_W_ISYNC=__isync"
-CodeRegEx='s/int\s*__mfcr\s*[(]\s*int/unsigned int RBSRCTRANS_W_MFCR ( unsigned short /'
-d "RBSRCTRANS_W_MFCR=__mfcr"
-CodeRegEx='s/void\s*__mtcr\s*[(]\s*int\s*[A-Za-z0-9_]*\s*,\s*int/void RBSRCTRANS_W_MTCR ( unsigned short , unsigned int /'
-d "RBSRCTRANS_W_MTCR=__mtcr"

* Provide special replacement for MCU_RB_MFCR() to enable correct results
-CodeRegEx='s/#define MCU_RB_MFCR[(]offset, ret[)].*/#define MCU_RB_MFCR(offset, ret) ((ret)=*(volatile unsigned int *)0x1234)/'


* -----Start of Extended Rule Section-----
-warnmacroexpansion "ALIGN_32=8501"
-warnmacroexpansion "ALIGN_8=8501"
-warnmacroexpansion "EXTCONST=8501"
-warnmacroexpansion "EXTFUNC=8501"
-warnmacroexpansion "EXTMOD=8501"
-warnmacroexpansion "EXTREG=8501"
-warnmacroexpansion "EXTVOL=8501"
-warnmacroexpansion "EXTVOLREG=8501"
-warnmacroexpansion "LOCFUNC=8501"
-warnmacroexpansion "PUBCONST=8501"
-warnmacroexpansion "PUBFUNC=8501"
-warnmacroexpansion "PUBLIC=8501"
-warnmacroexpansion "PUBREG=8501"
-warnmacroexpansion "PUBVOL=8501"
-warnmacroexpansion "PUBVOLREG=8501"
-warnmacroexpansion "REGISTER=8501"
-warnmacroexpansion "SIGNED=8501"
-warnmacroexpansion "VOLATILE=8501"
-warnmacroexpansion "BITFIELD_FALSE=8502"
-warnmacroexpansion "BITFIELD_TRUE=8502"
-warnmacroexpansion "NULL_POINTER=8502"
-warnmacroexpansion "NULL_SB=8502"
-warnmacroexpansion "NULL_SL=8502"
-warnmacroexpansion "NULL_SW=8502"
-warnmacroexpansion "NULL_UB=8502"
-warnmacroexpansion "NULL_UL=8502"
-warnmacroexpansion "NULL_UW=8502"
-warnmacroexpansion "PTR_INVALID=8502"
-warnmacroexpansion "VOID=8502"
-warnmacroexpansion "BOOL=8503"
-warnmacroexpansion "BOOLEAN=8503"
-warnmacroexpansion "CHAR=8503"
-warnmacroexpansion "SBYTE=8503"
-warnmacroexpansion "SWORD=8503"
-warnmacroexpansion "SLONG=8503"
-warnmacroexpansion "SLONGLONG=8503"
-warnmacroexpansion "UBYTE=8503"
-warnmacroexpansion "UWORD=8503"
-warnmacroexpansion "ULONG=8503"
-warnmacroexpansion "ULONGLONG=8503"
-warnmacroexpansion "FLOAT=8503"
-warnmacroexpansion "DOUBLE=8503"
-warnmacroexpansion "PVOID=8503"
-warnmacroexpansion "PBOOL=8503"
-warnmacroexpansion "PCHAR=8503"
-warnmacroexpansion "PSBYTE=8503"
-warnmacroexpansion "PSWORD=8503"
-warnmacroexpansion "PSLONG=8503"
-warnmacroexpansion "PUBYTE=8503"
-warnmacroexpansion "PUWORD=8503"
-warnmacroexpansion "PULONG=8503"
-warnmacroexpansion "PFLOAT=8503"
-warnmacroexpansion "PDOUBLE=8503"
-warnmacroexpansion "BITFIELD16=8503"
-warnmacroexpansion "BITFIELD32=8503"
-warnmacroexpansion "BITFIELD8=8503"
-warnmacroexpansion "BITFIELD=8503"
-warnmacroexpansion "INDEX_T=8503"
-warnmacroexpansion "SB=8503"
-warnmacroexpansion "SW=8503"
-warnmacroexpansion "SL=8503"
-warnmacroexpansion "UB=8503"
-warnmacroexpansion "UW=8503"
-warnmacroexpansion "UL=8503"
-warnmacroexpansion "F=8503"
-warnmacroexpansion "D=8503"
-d "BOOL=BOOL"
-d "BOOLEAN=BOOLEAN"
-d "CHAR=CHAR"
-d "SBYTE=SBYTE"
-d "SWORD=SWORD"
-d "SLONG=SLONG"
-d "SLONGLONG=SLONGLONG"
-d "UBYTE=UBYTE"
-d "UWORD=UWORD"
-d "ULONG=ULONG"
-d "ULONGLONG=ULONGLONG"
-d "FLOAT=FLOAT"
-d "DOUBLE=DOUBLE"
-d "PVOID=PVOID"
-d "PBOOL=PBOOL"
-d "PCHAR=PCHAR"
-d "PSBYTE=PSBYTE"
-d "PSWORD=PSWORD"
-d "PSLONG=PSLONG"
-d "PUBYTE=PUBYTE"
-d "PUWORD=PUWORD"
-d "PULONG=PULONG"
-d "PFLOAT=PFLOAT"
-d "PDOUBLE=PDOUBLE"
-d "BITFIELD16=BITFIELD16"
-d "BITFIELD32=BITFIELD32"
-d "BITFIELD8=BITFIELD8"
-d "BITFIELD=BITFIELD"
-d "INDEX_T=INDEX_T"
-d "SB=SB"
-d "SW=SW"
-d "SL=SL"
-d "UB=UB"
-d "UW=UW"
-d "UL=UL"
-d "F=F"
-d "D=D"
-warnmacroexpansion "RBSRCTRANS_W_MFCR=8601"
-warnmacroexpansion "RBSRCTRANS_W_MTCR=8601"
-warnmacroexpansion "RBSRCTRANS_W_DSYNC=8601"
-warnmacroexpansion "RBSRCTRANS_W_ISYNC=8601"
-warncall "calloc=5118"
-warncall "free=5118"
-warncall "malloc=5118"
-warncall "realloc=5118"
-warncall "_IO_getc=5124"
-warncall "_IO_putc=5124"
-warncall "clearerr=5124"
-warncall "fclose=5124"
-warncall "feof=5124"
-warncall "ferror=5124"
-warncall "fflush=5124"
-warncall "fgetc=5124"
-warncall "fgetpos=5124"
-warncall "fgets=5124"
-warncall "fgetwc=5124"
-warncall "fgetws=5124"
-warncall "fopen=5124"
-warncall "fprintf=5124"
-warncall "fputc=5124"
-warncall "fputs=5124"
-warncall "fputwc=5124"
-warncall "fputws=5124"
-warncall "fread=5124"
-warncall "freopen=5124"
-warncall "fscanf=5124"
-warncall "fseek=5124"
-warncall "fsetpos=5124"
-warncall "ftell=5124"
-warncall "fwide=5124"
-warncall "fwprintf=5124"
-warncall "fwrite=5124"
-warncall "fwscanf=5124"
-warncall "getc=5124"
-warncall "getchar=5124"
-warncall "gets=5124"
-warncall "getwc=5124"
-warncall "getwchar=5124"
-warncall "perror=5124"
-warncall "printf=5124"
-warncall "putc=5124"
-warncall "putchar=5124"
-warncall "puts=5124"
-warncall "putwc=5124"
-warncall "putwchar=5124"
-warncall "remove=5124"
-warncall "rename=5124"
-warncall "rewind=5124"
-warncall "scanf=5124"
-warncall "setbuf=5124"
-warncall "setvbuf=5124"
-warncall "tmpfile=5124"
-warncall "tmpnam=5124"
-warncall "ungetc=5124"
-warncall "ungetwc=5124"
-warncall "vfprintf=5124"
-warncall "vfwprintf=5124"
-warncall "vfwscanf=5124"
-warncall "vprintf=5124"
-warncall "vwprintf=5124"
-warncall "vwscanf=5124"
-warncall "wprintf=5124"
-warncall "wscanf=5124"
-warncall "atof=5125"
-warncall "atoi=5125"
-warncall "atol=5125"
-warncall "atoll=5125"
-warncall "abort=5126"
-warncall "exit=5126"
-warncall "system=5126"
-warncall "getenv=5128"
-warncall "bsearch=5135"
-warncall "qsort=5135"
-warncall "feclearexcept=5136"
-warncall "fegetexceptflag=5136"
-warncall "feraiseexcept=5136"
-warncall "fesetexceptflag=5136"
-warncall "fetestexcept=5136"
-warncall "longjmp=5137"
-warncall "setjmp=5137"
-warnmacroexpansion "setjmp=5137"
-warncall "raise=5138"
-warncall "signal=5138"
-warncall "asctime=5139"
-warncall "clock=5139"
-warncall "ctime=5139"
-warncall "difftime=5139"
-warncall "gmtime=5139"
-warncall "localtime=5139"
-warncall "mktime=5139"
-warncall "strftime=5139"
-warncall "time=5139"
-warncall "timespec_get=5139"
-warncall "wcsftime=5139"
-warnmacroexpansion "wcsftime=5139"
-warnmacroexpansion "va_arg=5140"
-warncall "va_copy=5140"
-warnmacroexpansion "va_copy=5140"
-warncall "va_end=5140"
-warnmacroexpansion "va_end=5140"
-warnmacroexpansion "va_start=5140"
-warnmacroexpansion "acos=5141"
-warnmacroexpansion "acosh=5141"
-warnmacroexpansion "asin=5141"
-warnmacroexpansion "asinh=5141"
-warnmacroexpansion "atan=5141"
-warnmacroexpansion "atan2=5141"
-warnmacroexpansion "atanh=5141"
-warnmacroexpansion "carg=5141"
-warnmacroexpansion "cbrt=5141"
-warnmacroexpansion "ceil=5141"
-warnmacroexpansion "cimag=5141"
-warnmacroexpansion "conj=5141"
-warnmacroexpansion "copysign=5141"
-warnmacroexpansion "cos=5141"
-warnmacroexpansion "cosh=5141"
-warnmacroexpansion "cproj=5141"
-warnmacroexpansion "creal=5141"
-warnmacroexpansion "erf=5141"
-warnmacroexpansion "erfc=5141"
-warnmacroexpansion "exp=5141"
-warnmacroexpansion "exp2=5141"
-warnmacroexpansion "expm1=5141"
-warnmacroexpansion "fabs=5141"
-warnmacroexpansion "fdim=5141"
-warnmacroexpansion "floor=5141"
-warnmacroexpansion "fma=5141"
-warnmacroexpansion "fmax=5141"
-warnmacroexpansion "fmin=5141"
-warnmacroexpansion "fmod=5141"
-warnmacroexpansion "frexp=5141"
-warnmacroexpansion "hypot=5141"
-warnmacroexpansion "ilogb=5141"
-warnmacroexpansion "ldexp=5141"
-warnmacroexpansion "lgamma=5141"
-warnmacroexpansion "llrint=5141"
-warnmacroexpansion "llround=5141"
-warnmacroexpansion "log=5141"
-warnmacroexpansion "log10=5141"
-warnmacroexpansion "log1p=5141"
-warnmacroexpansion "log2=5141"
-warnmacroexpansion "logb=5141"
-warnmacroexpansion "lrint=5141"
-warnmacroexpansion "lround=5141"
-warnmacroexpansion "nearbyint=5141"
-warnmacroexpansion "nextafter=5141"
-warnmacroexpansion "nexttoward=5141"
-warnmacroexpansion "pow=5141"
-warnmacroexpansion "remainder=5141"
-warnmacroexpansion "remquo=5141"
-warnmacroexpansion "rint=5141"
-warnmacroexpansion "round=5141"
-warnmacroexpansion "scalbln=5141"
-warnmacroexpansion "scalbn=5141"
-warnmacroexpansion "sin=5141"
-warnmacroexpansion "sinh=5141"
-warnmacroexpansion "sqrt=5141"
-warnmacroexpansion "tan=5141"
-warnmacroexpansion "tanh=5141"
-warnmacroexpansion "tgamma=5141"
-warnmacroexpansion "trunc=5141"
-warncall "fscanf=5005"
-warncall "scanf=5005"
-warncall "vfscanf=5005"
-warncall "vscanf=5005"
-warncall "strtok=5007"
-warncall "strcat=5008"
-warncall "strcpy=5008"
-warncall "strncat=5008"
-warncall "strncpy=5008"
-warncall "gets=5009"
-warncall "realloc=5010"
-warncall "fopen=5011"
-warncall "freopen=5011"
-warncall "remove=5011"
-warncall "rename=5011"
-warncall "fopen=5012"
-warncall "fopen_s=5012"
-warncall "fopen=5013"
-warncall "remove=5014"
-warncall "rename=5015"
-warncall "mktemp=5016"
-warncall "tmpfile=5016"
-warncall "tmpnam=5016"
-warncall "tmpnam_s=5016"
-warncall "system=5017"
-warncall "popen=5018"
-warncall "_popen=5018"
-warncall "system=5018"
-warncall "_wpopen=5018"
-warncall "signal=5019"
-warncall "signal=5020"
-warncall "signal=5021"
-warncall "rand=5022"
-warncall "vfork=5023"
-warncall "putenv=5024"
-warncall "acos=5025"
-warncall "acosh=5025"
-warncall "asin=5025"
-warncall "asinh=5025"
-warncall "atan=5025"
-warncall "atan2=5025"
-warncall "atanh=5025"
-warncall "cosh=5025"
-warncall "erf=5025"
-warncall "erfc=5025"
-warncall "exp=5025"
-warncall "exp2=5025"
-warncall "expm1=5025"
-warncall "fdim=5025"
-warncall "fma=5025"
-warncall "fmod=5025"
-warncall "hypot=5025"
-warncall "ilogb=5025"
-warncall "ldexp=5025"
-warncall "lgamma=5025"
-warncall "log=5025"
-warncall "log1p=5025"
-warncall "log2=5025"
-warncall "log10=5025"
-warncall "logb=5025"
-warncall "lrint=5025"
-warncall "lround=5025"
-warncall "nextafter=5025"
-warncall "nexttoward=5025"
-warncall "pow=5025"
-warncall "remainder=5025"
-warncall "remquo=5025"
-warncall "scalbn=5025"
-warncall "scalbln=5025"
-warncall "sinh=5025"
-warncall "sqrt=5025"
-warncall "tgamma=5025"
-warncall "realloc=5027"
-warncall "atof=5030"
-warncall "atoi=5030"
-warncall "atol=5030"
-warncall "atoll=5030"
-warncall "sscanf=5030"
-warncall "asctime=5032"
-warncall "readlink=5033"
-warncall "pthread_kill=5034"
-warncall "getc=5036"
-warncall "getwc=5036"
-warncall "putc=5036"
-warncall "putwc=5036"
-warnmacroexpansion "ATOMIC_VAR_INIT=5037"
-warnmacroexpansion "atomic_init=5037"
-warncall "atomic_init=5037"
-warncall "strcpy=5038"
* -----End of Extended Rule Section-----

